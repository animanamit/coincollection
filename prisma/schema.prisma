// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Set {
id Int @id @default(autoincrement())
name String
coins  CoinsOnSets[]
}

model CoinsOnSets  {
  set Set @relation(fields: [setId], references: [id])
  setId Int
  coin Coin @relation(fields: [coinId], references: [id])
  coinId Int
  @@id([setId, coinId])
}

model Coin {
  id Int @id @default(autoincrement())
  sets CoinsOnSets[]
  coinId String @unique
  name String
  coinage String
  ruler String
  period String
  type String
  year String
  class String
  denomination String
  variety String
  catalogueNumber String
  weight String
  grade String
  rarity String
  page String
  remarks String
  rating String
  obs String
  rev String
  obsPhoto String
  revPhoto String
  obsRemarkPhoto String
  revRemarkPhoto String
  status String
  sequenceNumber String
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}